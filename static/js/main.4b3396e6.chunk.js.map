{"version":3,"sources":["logo.svg","componets/header/header.js","componets/search/search.js","utils/api.js","componets/table head/tablehead.js","componets/table/table.js","componets/container/container.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Search","props","type","placeholder","onChange","handleInputChange","API","getEmployees","axios","get","TableHead","className","onClick","sortNames","Table","employees","map","employee","src","picture","thumbnail","alt","name","first","last","phone","email","login","username","Container","state","then","res","initialEmployeeList","data","results","setState","catch","err","console","log","event","searchName","target","value","searchNames","filteredEmployees","filter","toUpperCase","uppercaseSearchName","includes","sortedEmployees","sort","a","b","nameA","nameB","this","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAAe,I,MCSAA,MAPf,WACI,OACI,4D,gCCGOC,MALf,SAAgBC,GACZ,OACI,uBAAOC,KAAK,OAAOC,YAAY,oBAAoBC,SAAUH,EAAMI,qB,iBCG5DC,EALH,CACRC,aAAc,WACV,OAAOC,IAAMC,IAAI,kD,MCWVC,MAZf,SAAmBT,GACf,OACI,+BACI,yCACA,oBAAIU,UAAU,QAAQC,QAASX,EAAMY,UAArC,kBAGA,yCACA,2CCkBGC,MA1Bf,SAAeb,GACX,OACI,8BACI,wBAAOU,UAAU,YAAjB,UACI,gCACI,cAAC,EAAD,CAAWE,UAAWZ,EAAMY,cAEhC,gCACKZ,EAAMc,UAAUC,KAAI,SAACC,GAAD,OACjB,+BACI,6BACI,qBAAKC,IAAKD,EAASE,QAAQC,UAAWC,IAAI,kBAE9C,+BACKJ,EAASK,KAAKC,MADnB,IAC2BN,EAASK,KAAKE,QAEzC,6BAAKP,EAASQ,QACd,6BAAKR,EAASS,UARTT,EAASU,MAAMC,qBCuDjCC,E,4MA7DXC,MAAQ,CAAEf,UAAW,I,EAKrBR,aAAe,WACXD,EAAIC,eAAewB,MAAK,SAACC,GACrB,EAAKC,oBAAsBD,EAAIE,KAAKC,QACpC,EAAKC,SAAS,CAAErB,UAAWiB,EAAIE,KAAKC,aACrCE,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,O,EAElCjC,kBAAoB,SAACoC,GACjBF,QAAQC,IAAI,0BACZ,IAAME,EAAaD,EAAME,OAAOC,MAC5BF,EACA,EAAKG,YAAYH,GACTA,GACR,EAAKN,SAAS,CAAErB,UAAW,EAAKkB,uB,EAGxCY,YAAc,SAACH,GACX,IAAMI,EAAoB,EAAKb,oBAAoBc,QAAO,SAAC9B,GAC9BA,EAASK,KAAKC,MAAMyB,cAA7C,IACIC,EAAsBP,EAAWM,cACrC,GACI/B,EAASK,KAAKC,MAAMyB,cAAcE,SAASD,IAC3ChC,EAASK,KAAKE,KAAKwB,cAAcE,SAASD,GAE1C,OAAOhC,KAIfsB,QAAQC,IAAIM,GACZ,EAAKV,SAAS,CAAErB,UAAW+B,K,EAE/BjC,UAAY,WACR0B,QAAQC,IAAK,QACb,IAAIW,EAAkB,EAAKrB,MAAMf,UACjCwB,QAAQC,IAAIW,GACZA,EAAgBC,MAAK,SAAUC,EAAGC,GAC9B,IAAIC,EAAQF,EAAE/B,KAAKC,MAAMyB,cACrBQ,EAAQF,EAAEhC,KAAKC,MAAMyB,cACzB,OAAIO,EAAQC,GACA,EAERD,EAAQC,EACD,EAEJ,KAEX,EAAKpB,SAAS,CAAErB,UAAWoC,K,kEA/C3BM,KAAKlD,iB,+BAkDL,OACI,gCACI,cAAC,EAAD,CAAQF,kBAAmBoD,KAAKpD,oBAChC,cAAC,EAAD,CAAOU,UAAW0C,KAAK3B,MAAMf,UAAWF,UAAW4C,KAAK5C,mB,GAzDhD6C,aCSTC,MATf,WACE,OACE,sBAAKhD,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCGSiD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB/B,MAAK,YAAkD,IAA/CgC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4b3396e6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\"\n\nfunction Header() {\n    return (\n        <h1>\n            Employee Directory Search\n        </h1>\n    )\n}\nexport default Header","import React from \"react\"\n\nfunction Search(props) {\n    return (\n        <input type=\"text\" placeholder=\"start typing here\" onChange={props.handleInputChange}></input>\n    )\n}\nexport default Search","import axios from \"axios\"\n\nconst API = {\n    getEmployees: function (){\n        return axios.get(\"https://randomuser.me/api/?results=15&nat=us\"); \n    }\n}\nexport default API ","import React from \"react\"\nimport './style.css'\n\nfunction TableHead(props) {\n    return (\n        <tr>\n            <th>Picture</th>\n            <th className=\"hover\" onClick={props.sortNames}>\n                Name\n      </th>\n            <th>Phone #</th>\n            <th>Email</th>\n        </tr>\n    )\n}\nexport default TableHead","import React from \"react\"\nimport TableHead from '../table head/tablehead'\n\nfunction Table(props) {\n    return (\n        <div>\n            <table className=\"container\">\n                <thead>\n                    <TableHead sortNames={props.sortNames} />\n                </thead>\n                <tbody>\n                    {props.employees.map((employee) => (\n                        <tr key={employee.login.username}>\n                            <td>\n                                <img src={employee.picture.thumbnail} alt=\"Profile Pic\" />\n                            </td>\n                            <td>\n                                {employee.name.first} {employee.name.last}\n                            </td>\n                            <td>{employee.phone}</td>\n                            <td>{employee.email}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n\n    )\n}\nexport default Table","import React, { Component } from \"react\"\nimport Search from '../search/search'\nimport API from '../../utils/api'\nimport Table from '../table/table'\n\nclass Container extends Component {\n    state = { employees: [] }\n    initialEmployeelist;\n    componentDidMount() {\n        this.getEmployees()\n    }\n    getEmployees = () => {\n        API.getEmployees().then((res) => {\n            this.initialEmployeeList = res.data.results;\n            this.setState({ employees: res.data.results });\n        }).catch((err) => console.log(err))\n    }\n    handleInputChange = (event) => {\n        console.log(\"this.handleInputChange\")\n        const searchName = event.target.value\n        if (searchName) {\n            this.searchNames(searchName);\n        } else if (!searchName) {\n            this.setState({ employees: this.initialEmployeeList });\n        }\n    }\n    searchNames = (searchName) => {\n        const filteredEmployees = this.initialEmployeeList.filter((employee) => {\n            let uppercaseFirstName = employee.name.first.toUpperCase();\n            let uppercaseSearchName = searchName.toUpperCase();\n            if (\n                employee.name.first.toUpperCase().includes(uppercaseSearchName) ||\n                employee.name.last.toUpperCase().includes(uppercaseSearchName)\n            ) {\n                return employee;\n            }\n            //return uppercaseName.includes(uppercaseSearchName);\n        });\n        console.log(filteredEmployees);\n        this.setState({ employees: filteredEmployees });\n    }\n    sortNames = () => {\n        console.log (\"name\")\n        let sortedEmployees = this.state.employees;\n        console.log(sortedEmployees);\n        sortedEmployees.sort(function (a, b) {\n            let nameA = a.name.first.toUpperCase();\n            let nameB = b.name.first.toUpperCase();\n            if (nameA < nameB) {\n                return -1;\n            }\n            if (nameA > nameB) {\n                return 1;\n            }\n            return 0;\n        });\n        this.setState({ employees: sortedEmployees });\n    }\n    render() {\n        return (\n            <div>\n                <Search handleInputChange={this.handleInputChange} />\n                <Table employees={this.state.employees} sortNames={this.sortNames} />\n            </div>\n        )\n    }\n}\nexport default Container","import logo from './logo.svg';\nimport './App.css';\nimport Header from './componets/header/header';\nimport Container from './componets/container/container'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Container/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}